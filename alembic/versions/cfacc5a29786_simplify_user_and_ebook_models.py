"""Simplify user and ebook models

Revision ID: cfacc5a29786
Revises: b6e33d9032d7
Create Date: 2025-05-27 10:36:00.570412

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cfacc5a29786'
down_revision = 'b6e33d9032d7'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('collection_items')
    op.drop_index(op.f('ix_share_links_short_code'), table_name='share_links')
    op.drop_table('share_links')
    op.drop_table('reading_progress')
    op.drop_index(op.f('ix_ebooks_title'), table_name='ebooks')
    op.drop_table('ebooks')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_collections_name'), table_name='collections')
    op.drop_table('collections')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collections',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cover_image_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='collections_author_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='collections_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_collections_name'), 'collections', ['name'], unique=False)
    op.create_table('reviews',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('ebook_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_verified_purchase', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_flagged', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ebook_id'], ['ebooks.id'], name=op.f('reviews_ebook_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('reviews_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('reviews_pkey'))
    )
    op.create_table('ebooks',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('subtitle', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('author_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('isbn', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('publication_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('file_url', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('format', postgresql.ENUM('EPUB', 'MOBI', 'PDF', name='ebookformat'), autoincrement=False, nullable=False),
    sa.Column('original_filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('cover_image_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('page_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('word_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reading_time_minutes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('genre', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('tags', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('DRAFT', 'PUBLISHED', 'PRIVATE', 'ARCHIVED', name='ebookstatus'), autoincrement=False, nullable=False),
    sa.Column('is_featured', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('view_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('download_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('share_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='ebooks_author_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ebooks_pkey'),
    sa.UniqueConstraint('isbn', name='ebooks_isbn_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_ebooks_title'), 'ebooks', ['title'], unique=False)
    op.create_table('reading_progress',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('ebook_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('current_page', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_pages', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('progress_percentage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('chapter_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('position_cfi', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('position_offset', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reading_time_minutes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_read_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_finished', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_favorite', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('bookmarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('highlights', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('finished_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ebook_id'], ['ebooks.id'], name=op.f('reading_progress_ebook_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('reading_progress_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('reading_progress_pkey'))
    )
    op.create_table('share_links',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('short_code', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('original_url', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('ebook_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_by_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('click_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_accessed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('share_links_created_by_id_fkey')),
    sa.ForeignKeyConstraint(['ebook_id'], ['ebooks.id'], name=op.f('share_links_ebook_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('share_links_pkey'))
    )
    op.create_index(op.f('ix_share_links_short_code'), 'share_links', ['short_code'], unique=True)
    op.create_table('collection_items',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('collection_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('ebook_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('order_index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], name=op.f('collection_items_collection_id_fkey')),
    sa.ForeignKeyConstraint(['ebook_id'], ['ebooks.id'], name=op.f('collection_items_ebook_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('collection_items_pkey'))
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('display_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('profile_image_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('website_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('social_links', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('READER', 'AUTHOR', 'ADMIN', name='userrole'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('google_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('apple_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('apple_id', name=op.f('users_apple_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('google_id', name=op.f('users_google_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ### 